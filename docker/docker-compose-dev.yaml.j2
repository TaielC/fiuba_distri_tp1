version: '3'

{% for worker, replicas in workers %}
x-{{ worker }}: &{{ worker }}
  image: tp1-worker
  command: {{ worker }}
  build:
    context: ..
    dockerfile: docker/Dockerfile
    args:
      - include=middleware
      - package=worker
  volumes:
    - ../tp1/lib/src:/tp1/lib/src
    - ../tp1/middleware/src:/tp1/middleware/src
    - ../tp1/worker/src:/tp1/worker/src
  environment:
    - REPLICAS={{ replicas }}
{% endfor %}

services:
  middleware:
    container_name: middleware
    image: rabbitmq:3-management
    environment:
    - RABBITMQ_DEFAULT_USER=admin
    - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "15672:15672"
      - "5672:5672"

  server:
    container_name: server
    image: tp1-server
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - package=server
        - include=middleware
    ports:
      - "9000:9000"
    volumes:
      - ../tp1/lib/src:/tp1/lib/src
      - ../tp1/middleware/src:/tp1/middleware/src
      - ../tp1/server/src:/tp1/server/src
    depends_on:
      - middleware

  ## singleton workers

  fastest_by_route:
    image: tp1-worker
    command: fastest_by_route
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - include=middleware
        - package=worker
    volumes:
      - ../tp1/lib/src:/tp1/lib/src
      - ../tp1/middleware/src:/tp1/middleware/src
      - ../tp1/worker/src:/tp1/worker/src
    environment:
      - REPLICAS=1

  price_by_route:
    image: tp1-worker
    command: price_by_route
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - include=middleware
        - package=worker
    volumes:
      - ../tp1/lib/src:/tp1/lib/src
      - ../tp1/middleware/src:/tp1/middleware/src
      - ../tp1/worker/src:/tp1/worker/src
    environment:
      - REPLICAS=1

  ## non-singleton workers

  {% for worker, replicas in workers %}
  {%- for replica in range(1, replicas + 1) %}
  {{ worker }}-{{ replica }}:
    <<: *{{ worker }}
    container_name: "{{ worker }}-{{ replica }}"
  {%- endfor %}
  {% endfor %}
